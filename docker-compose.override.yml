services:
  # Development environment setup
  setup:
    image: node:20-alpine
    working_dir: /app
    volumes:
      - .:/app
      - /app/node_modules
      - ./.env.keys:/app/.env.keys:ro
    command: sh ./scripts/env-decrypt-dev.sh && sh ./scripts/env-prod.sh
    profiles:
      - setup

  # API service - development mode
  api:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    volumes:
      # Use bind mounts for source code only, not node_modules
      - ./apps/api:/app/apps/api
      - ./packages:/app/packages
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./turbo.json:/app/turbo.json
      - ./.env.keys:/app/.env.keys:ro
      # Use anonymous volume for node_modules to prevent host override
      - /app/node_modules
    working_dir: /app
    command: >
      sh -c "sh ./scripts/env-decrypt-dev.sh &&
             pnpm --filter @bloxtr8/api... install --frozen-lockfile --reporter=silent &&
             sh ./scripts/env-dev.sh pnpm --filter @bloxtr8/api dev"
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - DATABASE_URL_PRISMA=postgresql://postgres:postgres@test-db:5432/bloxtr8-db
    restart: 'no'
    depends_on:
      - test-db
  # Escrow service - development mode
  escrow:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    volumes:
      # Use bind mounts for source code only, not node_modules
      - ./apps/escrow:/app/apps/escrow
      - ./packages:/app/packages
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./turbo.json:/app/turbo.json
      - ./.env.keys:/app/.env.keys:ro
      # Use anonymous volume for node_modules to prevent host override
      - /app/node_modules
    working_dir: /app
    command: >
      sh -c "sh ./scripts/env-decrypt-dev.sh &&
             pnpm --filter @bloxtr8/escrow... install --frozen-lockfile --reporter=silent &&
             sh ./scripts/env-dev.sh pnpm --filter @bloxtr8/escrow dev"
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - DATABASE_URL_PRISMA=postgresql://postgres:postgres@test-db:5432/bloxtr8-db
    restart: 'no'
    depends_on:
      - test-db
  # Discord bot - development mode
  discord-bot:
    build:
      context: .
      dockerfile: Dockerfile.dev
      target: development
    volumes:
      # Use bind mounts for source code only, not node_modules
      - ./apps/discord-bot:/app/apps/discord-bot
      - ./packages:/app/packages
      - ./package.json:/app/package.json
      - ./pnpm-lock.yaml:/app/pnpm-lock.yaml
      - ./pnpm-workspace.yaml:/app/pnpm-workspace.yaml
      - ./turbo.json:/app/turbo.json
      - ./.env.keys:/app/.env.keys:ro
      # Use anonymous volume for node_modules to prevent host override
      - /app/node_modules
    working_dir: /app
    command: >
      sh -c "sh ./scripts/env-decrypt-dev.sh &&
             pnpm --filter @bloxtr8/discord-bot... install --frozen-lockfile --reporter=silent &&
             sh ./scripts/env-dev.sh pnpm --filter @bloxtr8/discord-bot dev"
    environment:
      - NODE_ENV=development
      - WATCHPACK_POLLING=true
      - API_BASE_URL=http://api:3000
    restart: 'no'
    depends_on:
      - test-db
      - api
