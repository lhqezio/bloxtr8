services:
  # Database service
  test-db:
    image: postgres:16.2-alpine
    container_name: bloxtr8-db
    environment:
      - POSTGRES_DB=bloxtr8-db
      - POSTGRES_USER=postgres
      - POSTGRES_PASSWORD=postgres
    ports:
      - '5432:5432'
    volumes:
      - pgdata:/var/lib/postgresql/data
    # Optimize PostgreSQL for development
    command: postgres -c shared_preload_libraries=pg_stat_statements -c max_connections=100 -c shared_buffers=128MB

  # MinIO for file storage
  minio:
    image: minio/minio:latest
    ports:
      - '9000:9000'
      - '9001:9001'
    environment:
      - MINIO_ROOT_USER=minioadmin
      - MINIO_ROOT_PASSWORD=minioadmin123
    command: server /data --console-address ":9001"
    volumes:
      - minio_data:/data

  # API service - production optimized
  api:
    build:
      context: .
      dockerfile: apps/api/Dockerfile
      target: production
    ports:
      - '3000:3000'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@test-db:5432/bloxtr8-db
    restart: unless-stopped
    depends_on:
      - test-db
  escrow:
    build:
      context: .
      dockerfile: apps/escrow/Dockerfile
      target: production
    ports:
      - '3001:3001'
    environment:
      - NODE_ENV=production
      - DATABASE_URL=postgresql://postgres:postgres@test-db:5432/bloxtr8-db
    restart: unless-stopped
    depends_on:
      - test-db
  # Discord bot - production optimized
  discord-bot:
    build:
      context: .
      dockerfile: apps/discord-bot/Dockerfile
      target: production
    environment:
      - NODE_ENV=production
      - API_BASE_URL=http://api:3000
    restart: unless-stopped
    depends_on:
      - api

# Named volumes
volumes:
  pgdata:
  minio_data:
